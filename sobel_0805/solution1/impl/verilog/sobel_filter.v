// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel_filter_sobel_filter,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.063438,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=1113,HLS_SYN_LUT=1409,HLS_VERSION=2023_1}" *)

module sobel_filter (
        ap_clk,
        ap_rst_n,
        input_r_TDATA,
        input_r_TVALID,
        input_r_TREADY,
        input_r_TKEEP,
        input_r_TSTRB,
        input_r_TUSER,
        input_r_TLAST,
        input_r_TID,
        input_r_TDEST,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY,
        output_r_TKEEP,
        output_r_TSTRB,
        output_r_TUSER,
        output_r_TLAST,
        output_r_TID,
        output_r_TDEST
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_pp0_stage1 = 3'd4;

input   ap_clk;
input   ap_rst_n;
input  [23:0] input_r_TDATA;
input   input_r_TVALID;
output   input_r_TREADY;
input  [2:0] input_r_TKEEP;
input  [2:0] input_r_TSTRB;
input  [0:0] input_r_TUSER;
input  [0:0] input_r_TLAST;
input  [0:0] input_r_TID;
input  [0:0] input_r_TDEST;
output  [23:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;
output  [2:0] output_r_TKEEP;
output  [2:0] output_r_TSTRB;
output  [0:0] output_r_TUSER;
output  [0:0] output_r_TLAST;
output  [0:0] output_r_TID;
output  [0:0] output_r_TDEST;

 reg    ap_rst_n_inv;
reg   [10:0] line1_address0;
reg    line1_ce0;
reg    line1_we0;
wire   [7:0] line1_q0;
reg   [10:0] line2_address0;
reg    line2_ce0;
reg    line2_we0;
wire   [7:0] line2_q0;
reg   [10:0] line0_address0;
reg    line0_ce0;
reg    line0_we0;
wire   [7:0] line0_q0;
reg    output_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage1;
reg   [0:0] p_vld_reg_922;
reg   [0:0] p_vld_reg_922_pp0_iter3_reg;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
reg    ap_block_state10_pp0_stage0_iter4;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] p_vld_fu_441_p1;
reg   [0:0] p_vld_reg_922_pp0_iter1_reg;
reg   [0:0] p_vld_reg_922_pp0_iter2_reg;
reg   [23:0] in_data_reg_926;
reg   [2:0] in_keep_reg_933;
reg   [2:0] in_keep_reg_933_pp0_iter1_reg;
reg   [2:0] in_keep_reg_933_pp0_iter2_reg;
reg   [2:0] in_keep_reg_933_pp0_iter3_reg;
reg   [2:0] in_strb_reg_938;
reg   [2:0] in_strb_reg_938_pp0_iter1_reg;
reg   [2:0] in_strb_reg_938_pp0_iter2_reg;
reg   [2:0] in_strb_reg_938_pp0_iter3_reg;
reg   [0:0] in_user_reg_943;
reg   [0:0] in_user_reg_943_pp0_iter1_reg;
reg   [0:0] in_user_reg_943_pp0_iter2_reg;
reg   [0:0] in_user_reg_943_pp0_iter3_reg;
wire   [0:0] in_last_fu_461_p1;
reg   [0:0] in_last_reg_953;
reg   [0:0] in_last_reg_953_pp0_iter1_reg;
reg   [0:0] in_last_reg_953_pp0_iter2_reg;
reg   [0:0] in_last_reg_953_pp0_iter3_reg;
reg   [0:0] in_id_reg_958;
reg   [0:0] in_id_reg_958_pp0_iter1_reg;
reg   [0:0] in_id_reg_958_pp0_iter2_reg;
reg   [0:0] in_id_reg_958_pp0_iter3_reg;
reg   [0:0] in_dest_reg_963;
reg   [0:0] in_dest_reg_963_pp0_iter1_reg;
reg   [0:0] in_dest_reg_963_pp0_iter2_reg;
reg   [0:0] in_dest_reg_963_pp0_iter3_reg;
wire   [0:0] icmp_ln103_fu_481_p2;
reg   [0:0] icmp_ln103_reg_973;
reg   [0:0] icmp_ln103_reg_973_pp0_iter1_reg;
reg   [0:0] icmp_ln103_reg_973_pp0_iter2_reg;
wire   [0:0] icmp_ln106_fu_487_p2;
reg   [0:0] icmp_ln106_reg_977;
reg   [0:0] icmp_ln106_reg_977_pp0_iter1_reg;
wire   [0:0] icmp_ln128_fu_493_p2;
reg   [0:0] icmp_ln128_reg_981;
reg   [0:0] icmp_ln128_reg_981_pp0_iter1_reg;
reg   [0:0] icmp_ln128_reg_981_pp0_iter2_reg;
wire   [31:0] select_ln86_3_fu_544_p3;
reg   [31:0] select_ln86_3_reg_985;
reg   [31:0] select_ln86_3_reg_985_pp0_iter2_reg;
reg   [7:0] tmp_reg_991;
reg   [7:0] tmp_2_reg_997;
wire   [0:0] icmp_ln110_fu_610_p2;
reg   [0:0] icmp_ln110_reg_1007;
wire   [0:0] grp_fu_403_p2;
reg   [0:0] icmp_ln111_reg_1016;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln108_reg_1030;
reg   [0:0] icmp_ln105_reg_1044;
wire   [0:0] and_ln122_fu_662_p2;
reg   [0:0] and_ln122_reg_1053;
reg   [0:0] and_ln122_reg_1053_pp0_iter2_reg;
reg   [0:0] and_ln122_reg_1053_pp0_iter3_reg;
reg   [7:0] gray_reg_1057;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state7_pp0_stage1_iter2;
reg    ap_block_state9_pp0_stage1_iter3;
reg    ap_block_state9_io;
reg    ap_block_pp0_stage1_11001;
reg    ap_enable_reg_pp0_iter0;
wire    ap_CS_fsm_state1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
wire   [7:0] grp_sobel_core_fu_390_t2_val;
wire   [7:0] grp_sobel_core_fu_390_m2_val;
wire   [7:0] grp_sobel_core_fu_390_b2_val;
wire   [7:0] grp_sobel_core_fu_390_ap_return;
reg    grp_sobel_core_fu_390_ap_ce;
reg    ap_predicate_op169_call_state6;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call0;
wire    ap_block_state4_pp0_stage0_iter1_ignore_call0;
wire    ap_block_state6_pp0_stage0_iter2_ignore_call0;
wire    ap_block_state8_pp0_stage0_iter3_ignore_call0;
reg    ap_block_state10_pp0_stage0_iter4_ignore_call0;
reg    ap_block_pp0_stage0_11001_ignoreCallOp169;
wire    ap_block_state3_pp0_stage1_iter0_ignore_call0;
wire    ap_block_state5_pp0_stage1_iter1_ignore_call0;
wire    ap_block_state7_pp0_stage1_iter2_ignore_call0;
reg    ap_block_state9_pp0_stage1_iter3_ignore_call0;
reg    ap_block_pp0_stage1_11001_ignoreCallOp178;
reg   [7:0] ap_phi_mux_top0_3_phi_fu_298_p4;
reg   [7:0] ap_phi_reg_pp0_iter1_top0_3_reg_294;
wire   [7:0] ap_phi_reg_pp0_iter0_top0_3_reg_294;
reg   [7:0] ap_phi_mux_top0_2_phi_fu_311_p4;
reg   [7:0] ap_phi_reg_pp0_iter1_top0_2_reg_307;
wire   [7:0] ap_phi_reg_pp0_iter0_top0_2_reg_307;
reg   [7:0] ap_phi_mux_top0_phi_fu_324_p4;
reg   [7:0] ap_phi_reg_pp0_iter1_top0_reg_320;
wire   [7:0] ap_phi_reg_pp0_iter0_top0_reg_320;
wire   [7:0] ap_phi_reg_pp0_iter0_top0_1_reg_333;
reg   [7:0] ap_phi_reg_pp0_iter1_top0_1_reg_333;
reg   [7:0] ap_phi_reg_pp0_iter2_top0_1_reg_333;
wire   [7:0] ap_phi_reg_pp0_iter0_mid0_reg_357;
reg   [7:0] ap_phi_reg_pp0_iter1_mid0_reg_357;
reg   [7:0] ap_phi_reg_pp0_iter2_mid0_reg_357;
reg   [7:0] ap_phi_mux_yout_1_phi_fu_383_p4;
reg   [7:0] ap_phi_reg_pp0_iter3_yout_1_reg_379;
wire   [7:0] ap_phi_reg_pp0_iter0_yout_1_reg_379;
reg   [7:0] ap_phi_reg_pp0_iter1_yout_1_reg_379;
reg   [7:0] ap_phi_reg_pp0_iter2_yout_1_reg_379;
wire   [63:0] zext_ln110_fu_616_p1;
wire   [63:0] zext_ln111_fu_621_p1;
wire   [63:0] zext_ln107_fu_626_p1;
wire   [63:0] zext_ln108_fu_631_p1;
wire   [63:0] zext_ln104_fu_636_p1;
wire   [63:0] zext_ln105_fu_641_p1;
wire   [63:0] zext_ln127_fu_849_p1;
reg   [1:0] empty_fu_140;
wire   [1:0] select_ln146_fu_525_p3;
reg   [31:0] inc480_fu_144;
wire   [31:0] select_ln86_4_fu_551_p3;
wire   [31:0] add_ln145_fu_673_p2;
reg   [31:0] empty_18_fu_148;
wire   [31:0] select_ln149_fu_774_p3;
reg   [7:0] top0_4_fu_152;
reg   [7:0] mid0_1_fu_156;
reg   [7:0] gray_1_fu_160;
wire   [0:0] empty_19_nbread_fu_164_p8_0;
reg    ap_block_pp0_stage1_01001;
wire   [7:0] b8_fu_473_p1;
wire   [2:0] zext_ln146_fu_499_p1;
wire   [2:0] add_ln146_fu_503_p2;
wire   [0:0] icmp_ln146_fu_509_p2;
wire   [1:0] trunc_ln146_fu_521_p1;
wire   [1:0] xor_ln146_fu_515_p2;
wire   [7:0] g8_fu_559_p4;
wire   [8:0] zext_ln10_2_fu_577_p1;
wire   [8:0] add_ln10_2_fu_590_p2;
wire   [30:0] tmp_1_fu_600_p4;
wire   [30:0] tmp_3_fu_646_p4;
wire   [0:0] icmp_ln122_fu_656_p2;
wire   [13:0] shl_ln_fu_689_p3;
wire   [8:0] shl_ln10_1_fu_700_p3;
wire   [14:0] shl_ln10_2_fu_711_p3;
wire   [15:0] zext_ln10_1_fu_707_p1;
wire   [15:0] zext_ln10_3_fu_718_p1;
wire   [15:0] add_ln10_fu_722_p2;
wire   [15:0] zext_ln10_fu_696_p1;
wire   [12:0] grp_fu_866_p3;
wire   [15:0] zext_ln10_6_fu_734_p1;
wire   [15:0] add_ln10_1_fu_728_p2;
wire   [15:0] y_fu_737_p2;
wire   [31:0] add_ln148_fu_753_p2;
wire   [20:0] tmp_4_fu_758_p4;
wire   [0:0] icmp_ln149_fu_768_p2;
wire   [7:0] grp_fu_866_p0;
wire   [4:0] grp_fu_866_p1;
wire   [8:0] grp_fu_866_p2;
reg    grp_fu_866_ce;
reg   [2:0] ap_NS_fsm;
wire    ap_ST_fsm_state1_blk;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0;
reg    ap_predicate_op97_load_state4;
reg    ap_enable_operation_97;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op138_load_state5;
reg    ap_enable_operation_138;
reg    ap_enable_state5_pp0_iter1_stage1;
reg    ap_predicate_op187_store_state7;
reg    ap_enable_operation_187;
reg    ap_enable_state7_pp0_iter2_stage1;
reg    ap_predicate_op101_load_state4;
reg    ap_enable_operation_101;
reg    ap_predicate_op142_load_state5;
reg    ap_enable_operation_142;
reg    ap_predicate_op184_store_state7;
reg    ap_enable_operation_184;
reg    ap_predicate_op105_load_state4;
reg    ap_enable_operation_105;
reg    ap_predicate_op144_load_state5;
reg    ap_enable_operation_144;
reg    ap_predicate_op181_store_state7;
reg    ap_enable_operation_181;
reg    ap_predicate_op109_load_state4;
reg    ap_enable_operation_109;
reg    ap_predicate_op148_load_state5;
reg    ap_enable_operation_148;
reg    ap_predicate_op113_load_state4;
reg    ap_enable_operation_113;
reg    ap_predicate_op150_load_state5;
reg    ap_enable_operation_150;
reg    ap_predicate_op117_load_state4;
reg    ap_enable_operation_117;
reg    ap_predicate_op154_load_state5;
reg    ap_enable_operation_154;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_input_r_V_data_V_U_apdone_blk;
wire   [23:0] input_r_TDATA_int_regslice;
wire    input_r_TVALID_int_regslice;
reg    input_r_TREADY_int_regslice;
wire    regslice_both_input_r_V_data_V_U_ack_in;
wire    regslice_both_input_r_V_keep_V_U_apdone_blk;
wire   [2:0] input_r_TKEEP_int_regslice;
wire    regslice_both_input_r_V_keep_V_U_vld_out;
wire    regslice_both_input_r_V_keep_V_U_ack_in;
wire    regslice_both_input_r_V_strb_V_U_apdone_blk;
wire   [2:0] input_r_TSTRB_int_regslice;
wire    regslice_both_input_r_V_strb_V_U_vld_out;
wire    regslice_both_input_r_V_strb_V_U_ack_in;
wire    regslice_both_input_r_V_user_V_U_apdone_blk;
wire   [0:0] input_r_TUSER_int_regslice;
wire    regslice_both_input_r_V_user_V_U_vld_out;
wire    regslice_both_input_r_V_user_V_U_ack_in;
wire    regslice_both_input_r_V_last_V_U_apdone_blk;
wire   [0:0] input_r_TLAST_int_regslice;
wire    regslice_both_input_r_V_last_V_U_vld_out;
wire    regslice_both_input_r_V_last_V_U_ack_in;
wire    regslice_both_input_r_V_id_V_U_apdone_blk;
wire   [0:0] input_r_TID_int_regslice;
wire    regslice_both_input_r_V_id_V_U_vld_out;
wire    regslice_both_input_r_V_id_V_U_ack_in;
wire    regslice_both_input_r_V_dest_V_U_apdone_blk;
wire   [0:0] input_r_TDEST_int_regslice;
wire    regslice_both_input_r_V_dest_V_U_vld_out;
wire    regslice_both_input_r_V_dest_V_U_ack_in;
wire    regslice_both_output_r_V_data_V_U_apdone_blk;
wire   [23:0] output_r_TDATA_int_regslice;
reg    output_r_TVALID_int_regslice;
wire    output_r_TREADY_int_regslice;
wire    regslice_both_output_r_V_data_V_U_vld_out;
wire    regslice_both_output_r_V_keep_V_U_apdone_blk;
wire    regslice_both_output_r_V_keep_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_keep_V_U_vld_out;
wire    regslice_both_output_r_V_strb_V_U_apdone_blk;
wire    regslice_both_output_r_V_strb_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_strb_V_U_vld_out;
wire    regslice_both_output_r_V_user_V_U_apdone_blk;
wire    regslice_both_output_r_V_user_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_user_V_U_vld_out;
wire    regslice_both_output_r_V_last_V_U_apdone_blk;
wire    regslice_both_output_r_V_last_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_last_V_U_vld_out;
wire    regslice_both_output_r_V_id_V_U_apdone_blk;
wire    regslice_both_output_r_V_id_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_id_V_U_vld_out;
wire    regslice_both_output_r_V_dest_V_U_apdone_blk;
wire    regslice_both_output_r_V_dest_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_dest_V_U_vld_out;
wire   [12:0] grp_fu_866_p00;
wire   [12:0] grp_fu_866_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

sobel_filter_line1_RAM_1P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
line1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line1_address0),
    .ce0(line1_ce0),
    .we0(line1_we0),
    .d0(gray_reg_1057),
    .q0(line1_q0)
);

sobel_filter_line1_RAM_1P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
line2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line2_address0),
    .ce0(line2_ce0),
    .we0(line2_we0),
    .d0(gray_reg_1057),
    .q0(line2_q0)
);

sobel_filter_line1_RAM_1P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
line0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line0_address0),
    .ce0(line0_ce0),
    .we0(line0_we0),
    .d0(gray_reg_1057),
    .q0(line0_q0)
);

sobel_filter_sobel_core grp_sobel_core_fu_390(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .t2_val(grp_sobel_core_fu_390_t2_val),
    .t1_val(ap_phi_reg_pp0_iter2_top0_1_reg_333),
    .m2_val(grp_sobel_core_fu_390_m2_val),
    .m0_val(ap_phi_reg_pp0_iter2_mid0_reg_357),
    .b2_val(grp_sobel_core_fu_390_b2_val),
    .b1_val(gray_reg_1057),
    .ap_return(grp_sobel_core_fu_390_ap_return),
    .ap_ce(grp_sobel_core_fu_390_ap_ce)
);

sobel_filter_mac_muladd_8ns_5ns_9ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 13 ))
mac_muladd_8ns_5ns_9ns_13_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_866_p0),
    .din1(grp_fu_866_p1),
    .din2(grp_fu_866_p2),
    .ce(grp_fu_866_ce),
    .dout(grp_fu_866_p3)
);

sobel_filter_regslice_both #(
    .DataWidth( 24 ))
regslice_both_input_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TDATA),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_data_V_U_ack_in),
    .data_out(input_r_TDATA_int_regslice),
    .vld_out(input_r_TVALID_int_regslice),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_data_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_input_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TKEEP),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_keep_V_U_ack_in),
    .data_out(input_r_TKEEP_int_regslice),
    .vld_out(regslice_both_input_r_V_keep_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_keep_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_input_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TSTRB),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_strb_V_U_ack_in),
    .data_out(input_r_TSTRB_int_regslice),
    .vld_out(regslice_both_input_r_V_strb_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_strb_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_input_r_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TUSER),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_user_V_U_ack_in),
    .data_out(input_r_TUSER_int_regslice),
    .vld_out(regslice_both_input_r_V_user_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_user_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_input_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TLAST),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_last_V_U_ack_in),
    .data_out(input_r_TLAST_int_regslice),
    .vld_out(regslice_both_input_r_V_last_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_last_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_input_r_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TID),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_id_V_U_ack_in),
    .data_out(input_r_TID_int_regslice),
    .vld_out(regslice_both_input_r_V_id_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_id_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_input_r_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TDEST),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_dest_V_U_ack_in),
    .data_out(input_r_TDEST_int_regslice),
    .vld_out(regslice_both_input_r_V_dest_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_dest_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 24 ))
regslice_both_output_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TDATA_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(output_r_TREADY_int_regslice),
    .data_out(output_r_TDATA),
    .vld_out(regslice_both_output_r_V_data_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_data_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_output_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_keep_reg_933_pp0_iter3_reg),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_keep_V_U_ack_in_dummy),
    .data_out(output_r_TKEEP),
    .vld_out(regslice_both_output_r_V_keep_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_keep_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 3 ))
regslice_both_output_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_strb_reg_938_pp0_iter3_reg),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_strb_V_U_ack_in_dummy),
    .data_out(output_r_TSTRB),
    .vld_out(regslice_both_output_r_V_strb_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_strb_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_r_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_user_reg_943_pp0_iter3_reg),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_user_V_U_ack_in_dummy),
    .data_out(output_r_TUSER),
    .vld_out(regslice_both_output_r_V_user_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_user_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_last_reg_953_pp0_iter3_reg),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_last_V_U_ack_in_dummy),
    .data_out(output_r_TLAST),
    .vld_out(regslice_both_output_r_V_last_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_last_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_r_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_id_reg_958_pp0_iter3_reg),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_id_V_U_ack_in_dummy),
    .data_out(output_r_TID),
    .vld_out(regslice_both_output_r_V_id_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_id_V_U_apdone_blk)
);

sobel_filter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_r_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_dest_reg_963_pp0_iter3_reg),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_dest_V_U_ack_in_dummy),
    .data_out(output_r_TDEST),
    .vld_out(regslice_both_output_r_V_dest_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln110_fu_610_p2 == 1'd0) & (icmp_ln106_reg_977 == 1'd1) & (icmp_ln103_reg_973 == 1'd0))) begin
        ap_phi_reg_pp0_iter1_top0_2_reg_307 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_top0_2_reg_307 <= ap_phi_reg_pp0_iter0_top0_2_reg_307;
    end
end

always @ (posedge ap_clk) begin
    if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln110_fu_610_p2 == 1'd0) & (icmp_ln106_reg_977 == 1'd0) & (icmp_ln103_reg_973 == 1'd0))) begin
        ap_phi_reg_pp0_iter1_top0_3_reg_294 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_top0_3_reg_294 <= ap_phi_reg_pp0_iter0_top0_3_reg_294;
    end
end

always @ (posedge ap_clk) begin
    if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln110_fu_610_p2 == 1'd0) & (icmp_ln103_reg_973 == 1'd1))) begin
        ap_phi_reg_pp0_iter1_top0_reg_320 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_top0_reg_320 <= ap_phi_reg_pp0_iter0_top0_reg_320;
    end
end

always @ (posedge ap_clk) begin
    if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln122_fu_662_p2))) begin
        ap_phi_reg_pp0_iter1_yout_1_reg_379 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_yout_1_reg_379 <= ap_phi_reg_pp0_iter0_yout_1_reg_379;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln108_reg_1030 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln105_reg_1044 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd1) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln111_reg_1016 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd0) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)))) begin
        ap_phi_reg_pp0_iter2_mid0_reg_357 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln105_reg_1044 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd1) & (p_vld_reg_922_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter2_mid0_reg_357 <= line2_q0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln108_reg_1030 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter2_mid0_reg_357 <= line0_q0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln111_reg_1016 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd0) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1))) begin
        ap_phi_reg_pp0_iter2_mid0_reg_357 <= line1_q0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_mid0_reg_357 <= ap_phi_reg_pp0_iter1_mid0_reg_357;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln105_reg_1044 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd1) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln105_reg_1044 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd1) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)))) begin
        ap_phi_reg_pp0_iter2_top0_1_reg_333 <= ap_phi_mux_top0_phi_fu_324_p4;
    end else if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln108_reg_1030 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln108_reg_1030 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)))) begin
        ap_phi_reg_pp0_iter2_top0_1_reg_333 <= ap_phi_mux_top0_2_phi_fu_311_p4;
    end else if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln111_reg_1016 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd0) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln111_reg_1016 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd0) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)))) begin
        ap_phi_reg_pp0_iter2_top0_1_reg_333 <= ap_phi_mux_top0_3_phi_fu_298_p4;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_top0_1_reg_333 <= ap_phi_reg_pp0_iter1_top0_1_reg_333;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) | ((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (in_last_reg_953 == 1'd1)))) begin
        empty_18_fu_148 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (in_last_reg_953_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1))) begin
        empty_18_fu_148 <= select_ln149_fu_774_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_fu_140 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (in_last_fu_461_p1 == 1'd1) & (p_vld_fu_441_p1 == 1'd1))) begin
        empty_fu_140 <= select_ln146_fu_525_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (in_last_reg_953_pp0_iter1_reg == 1'd1) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)))) begin
        gray_1_fu_160 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (in_last_reg_953_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1))) begin
        gray_1_fu_160 <= gray_reg_1057;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        inc480_fu_144 <= 32'd0;
    end else if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (in_last_reg_953 == 1'd1))) begin
        inc480_fu_144 <= add_ln145_fu_673_p2;
    end else if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (in_last_reg_953 == 1'd0))) begin
        inc480_fu_144 <= select_ln86_4_fu_551_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (in_last_reg_953_pp0_iter1_reg == 1'd1) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)))) begin
        mid0_1_fu_156 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (in_last_reg_953_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1))) begin
        mid0_1_fu_156 <= ap_phi_reg_pp0_iter2_mid0_reg_357;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (in_last_reg_953_pp0_iter1_reg == 1'd1) & (p_vld_reg_922_pp0_iter1_reg == 1'd1)))) begin
        top0_4_fu_152 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (in_last_reg_953_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1))) begin
        top0_4_fu_152 <= ap_phi_reg_pp0_iter2_top0_1_reg_333;
    end
end

always @ (posedge ap_clk) begin
    if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln122_reg_1053 <= and_ln122_fu_662_p2;
        icmp_ln110_reg_1007 <= icmp_ln110_fu_610_p2;
        select_ln86_3_reg_985 <= select_ln86_3_fu_544_p3;
        tmp_2_reg_997 <= {{in_data_reg_926[15:8]}};
        tmp_reg_991 <= {{in_data_reg_926[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln122_reg_1053_pp0_iter2_reg <= and_ln122_reg_1053;
        and_ln122_reg_1053_pp0_iter3_reg <= and_ln122_reg_1053_pp0_iter2_reg;
        icmp_ln103_reg_973_pp0_iter1_reg <= icmp_ln103_reg_973;
        icmp_ln103_reg_973_pp0_iter2_reg <= icmp_ln103_reg_973_pp0_iter1_reg;
        icmp_ln106_reg_977_pp0_iter1_reg <= icmp_ln106_reg_977;
        icmp_ln128_reg_981_pp0_iter1_reg <= icmp_ln128_reg_981;
        icmp_ln128_reg_981_pp0_iter2_reg <= icmp_ln128_reg_981_pp0_iter1_reg;
        in_data_reg_926 <= input_r_TDATA_int_regslice;
        in_dest_reg_963 <= input_r_TDEST_int_regslice;
        in_dest_reg_963_pp0_iter1_reg <= in_dest_reg_963;
        in_dest_reg_963_pp0_iter2_reg <= in_dest_reg_963_pp0_iter1_reg;
        in_dest_reg_963_pp0_iter3_reg <= in_dest_reg_963_pp0_iter2_reg;
        in_id_reg_958 <= input_r_TID_int_regslice;
        in_id_reg_958_pp0_iter1_reg <= in_id_reg_958;
        in_id_reg_958_pp0_iter2_reg <= in_id_reg_958_pp0_iter1_reg;
        in_id_reg_958_pp0_iter3_reg <= in_id_reg_958_pp0_iter2_reg;
        in_keep_reg_933 <= input_r_TKEEP_int_regslice;
        in_keep_reg_933_pp0_iter1_reg <= in_keep_reg_933;
        in_keep_reg_933_pp0_iter2_reg <= in_keep_reg_933_pp0_iter1_reg;
        in_keep_reg_933_pp0_iter3_reg <= in_keep_reg_933_pp0_iter2_reg;
        in_last_reg_953 <= input_r_TLAST_int_regslice;
        in_last_reg_953_pp0_iter1_reg <= in_last_reg_953;
        in_last_reg_953_pp0_iter2_reg <= in_last_reg_953_pp0_iter1_reg;
        in_last_reg_953_pp0_iter3_reg <= in_last_reg_953_pp0_iter2_reg;
        in_strb_reg_938 <= input_r_TSTRB_int_regslice;
        in_strb_reg_938_pp0_iter1_reg <= in_strb_reg_938;
        in_strb_reg_938_pp0_iter2_reg <= in_strb_reg_938_pp0_iter1_reg;
        in_strb_reg_938_pp0_iter3_reg <= in_strb_reg_938_pp0_iter2_reg;
        in_user_reg_943 <= input_r_TUSER_int_regslice;
        in_user_reg_943_pp0_iter1_reg <= in_user_reg_943;
        in_user_reg_943_pp0_iter2_reg <= in_user_reg_943_pp0_iter1_reg;
        in_user_reg_943_pp0_iter3_reg <= in_user_reg_943_pp0_iter2_reg;
        p_vld_reg_922 <= empty_19_nbread_fu_164_p8_0;
        p_vld_reg_922_pp0_iter1_reg <= p_vld_reg_922;
        p_vld_reg_922_pp0_iter2_reg <= p_vld_reg_922_pp0_iter1_reg;
        p_vld_reg_922_pp0_iter3_reg <= p_vld_reg_922_pp0_iter2_reg;
        select_ln86_3_reg_985_pp0_iter2_reg <= select_ln86_3_reg_985;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_mid0_reg_357 <= ap_phi_reg_pp0_iter0_mid0_reg_357;
        ap_phi_reg_pp0_iter1_top0_1_reg_333 <= ap_phi_reg_pp0_iter0_top0_1_reg_333;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_yout_1_reg_379 <= ap_phi_reg_pp0_iter1_yout_1_reg_379;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter3_yout_1_reg_379 <= ap_phi_reg_pp0_iter2_yout_1_reg_379;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (p_vld_reg_922_pp0_iter1_reg == 1'd1))) begin
        gray_reg_1057 <= {{y_fu_737_p2[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_fu_441_p1 == 1'd1))) begin
        icmp_ln103_reg_973 <= icmp_ln103_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln103_reg_973 == 1'd1))) begin
        icmp_ln105_reg_1044 <= grp_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln103_fu_481_p2 == 1'd0) & (p_vld_fu_441_p1 == 1'd1))) begin
        icmp_ln106_reg_977 <= icmp_ln106_fu_487_p2;
        icmp_ln128_reg_981 <= icmp_ln128_fu_493_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln106_reg_977 == 1'd1) & (icmp_ln103_reg_973 == 1'd0))) begin
        icmp_ln108_reg_1030 <= grp_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln106_reg_977 == 1'd0) & (icmp_ln103_reg_973 == 1'd0))) begin
        icmp_ln111_reg_1016 <= grp_fu_403_p2;
    end
end

assign ap_ST_fsm_state1_blk = 1'b0;

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln110_reg_1007 == 1'd1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1))) begin
        ap_phi_mux_top0_2_phi_fu_311_p4 = line2_q0;
    end else begin
        ap_phi_mux_top0_2_phi_fu_311_p4 = ap_phi_reg_pp0_iter1_top0_2_reg_307;
    end
end

always @ (*) begin
    if (((icmp_ln110_reg_1007 == 1'd1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd0) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1))) begin
        ap_phi_mux_top0_3_phi_fu_298_p4 = line0_q0;
    end else begin
        ap_phi_mux_top0_3_phi_fu_298_p4 = ap_phi_reg_pp0_iter1_top0_3_reg_294;
    end
end

always @ (*) begin
    if (((icmp_ln110_reg_1007 == 1'd1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd1) & (p_vld_reg_922_pp0_iter1_reg == 1'd1))) begin
        ap_phi_mux_top0_phi_fu_324_p4 = line1_q0;
    end else begin
        ap_phi_mux_top0_phi_fu_324_p4 = ap_phi_reg_pp0_iter1_top0_reg_320;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln122_reg_1053_pp0_iter3_reg) & (p_vld_reg_922_pp0_iter3_reg == 1'd1))) begin
        ap_phi_mux_yout_1_phi_fu_383_p4 = grp_sobel_core_fu_390_ap_return;
    end else begin
        ap_phi_mux_yout_1_phi_fu_383_p4 = ap_phi_reg_pp0_iter3_yout_1_reg_379;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_866_ce = 1'b1;
    end else begin
        grp_fu_866_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp178) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp169) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_sobel_core_fu_390_ap_ce = 1'b1;
    end else begin
        grp_sobel_core_fu_390_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((input_r_TVALID_int_regslice == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_TREADY_int_regslice = 1'b1;
    end else begin
        input_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        line0_address0 = zext_ln127_fu_849_p1;
    end else if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grp_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln106_reg_977 == 1'd1) & (icmp_ln103_reg_973 == 1'd0))) begin
        line0_address0 = zext_ln108_fu_631_p1;
    end else if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln110_fu_610_p2 == 1'd1) & (icmp_ln106_reg_977 == 1'd0) & (icmp_ln103_reg_973 == 1'd0))) begin
        line0_address0 = zext_ln110_fu_616_p1;
    end else begin
        line0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln110_fu_610_p2 == 1'd1) & (icmp_ln106_reg_977 == 1'd0) & (icmp_ln103_reg_973 == 1'd0)) | ((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grp_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln106_reg_977 == 1'd1) & (icmp_ln103_reg_973 == 1'd0)))) begin
        line0_ce0 = 1'b1;
    end else begin
        line0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_reg_973_pp0_iter2_reg == 1'd1) & (p_vld_reg_922_pp0_iter2_reg == 1'd1))) begin
        line0_we0 = 1'b1;
    end else begin
        line0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        line1_address0 = zext_ln127_fu_849_p1;
    end else if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln110_fu_610_p2 == 1'd1) & (icmp_ln103_reg_973 == 1'd1))) begin
        line1_address0 = zext_ln104_fu_636_p1;
    end else if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grp_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln106_reg_977 == 1'd0) & (icmp_ln103_reg_973 == 1'd0))) begin
        line1_address0 = zext_ln111_fu_621_p1;
    end else begin
        line1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln110_fu_610_p2 == 1'd1) & (icmp_ln103_reg_973 == 1'd1)) | ((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grp_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln106_reg_977 == 1'd0) & (icmp_ln103_reg_973 == 1'd0)))) begin
        line1_ce0 = 1'b1;
    end else begin
        line1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_981_pp0_iter2_reg == 1'd1) & (icmp_ln103_reg_973_pp0_iter2_reg == 1'd0) & (p_vld_reg_922_pp0_iter2_reg == 1'd1))) begin
        line1_we0 = 1'b1;
    end else begin
        line1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        line2_address0 = zext_ln127_fu_849_p1;
    end else if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grp_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln103_reg_973 == 1'd1))) begin
        line2_address0 = zext_ln105_fu_641_p1;
    end else if (((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln110_fu_610_p2 == 1'd1) & (icmp_ln106_reg_977 == 1'd1) & (icmp_ln103_reg_973 == 1'd0))) begin
        line2_address0 = zext_ln107_fu_626_p1;
    end else begin
        line2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln110_fu_610_p2 == 1'd1) & (icmp_ln106_reg_977 == 1'd1) & (icmp_ln103_reg_973 == 1'd0)) | ((p_vld_reg_922 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grp_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln103_reg_973 == 1'd1)))) begin
        line2_ce0 = 1'b1;
    end else begin
        line2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln128_reg_981_pp0_iter2_reg == 1'd0) & (icmp_ln103_reg_973_pp0_iter2_reg == 1'd0) & (p_vld_reg_922_pp0_iter2_reg == 1'd1))) begin
        line2_we0 = 1'b1;
    end else begin
        line2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (p_vld_reg_922_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((p_vld_reg_922_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        output_r_TDATA_blk_n = output_r_TREADY_int_regslice;
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((p_vld_reg_922_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_r_TVALID_int_regslice = 1'b1;
    end else begin
        output_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_1_fu_728_p2 = (add_ln10_fu_722_p2 + zext_ln10_fu_696_p1);

assign add_ln10_2_fu_590_p2 = (zext_ln10_2_fu_577_p1 + 9'd128);

assign add_ln10_fu_722_p2 = (zext_ln10_1_fu_707_p1 + zext_ln10_3_fu_718_p1);

assign add_ln145_fu_673_p2 = (select_ln86_4_fu_551_p3 + 32'd1);

assign add_ln146_fu_503_p2 = (zext_ln146_fu_499_p1 + 3'd1);

assign add_ln148_fu_753_p2 = (select_ln86_3_reg_985 + 32'd1);

assign and_ln122_fu_662_p2 = (icmp_ln122_fu_656_p2 & icmp_ln110_fu_610_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = (((1'b1 == ap_block_pp0_stage0_subdone) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm)) | ((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp169 = ((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp178 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1))));
end

always @ (*) begin
    ap_block_state10_io = ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter4 = ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter4_ignore_call0 = ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2_ignore_call0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3_ignore_call0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_block_state9_pp0_stage1_iter3 = ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_block_state9_pp0_stage1_iter3_ignore_call0 = ((output_r_TREADY_int_regslice == 1'b0) & (p_vld_reg_922_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_enable_operation_101 = (ap_predicate_op101_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_105 = (ap_predicate_op105_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_109 = (ap_predicate_op109_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_113 = (ap_predicate_op113_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_117 = (ap_predicate_op117_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_138 = (ap_predicate_op138_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_142 = (ap_predicate_op142_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_144 = (ap_predicate_op144_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_148 = (ap_predicate_op148_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_150 = (ap_predicate_op150_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_154 = (ap_predicate_op154_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_181 = (ap_predicate_op181_store_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_184 = (ap_predicate_op184_store_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_187 = (ap_predicate_op187_store_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_97 = (ap_predicate_op97_load_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage1 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state7_pp0_iter2_stage1 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_phi_reg_pp0_iter0_mid0_reg_357 = 'bx;

assign ap_phi_reg_pp0_iter0_top0_1_reg_333 = 'bx;

assign ap_phi_reg_pp0_iter0_top0_2_reg_307 = 'bx;

assign ap_phi_reg_pp0_iter0_top0_3_reg_294 = 'bx;

assign ap_phi_reg_pp0_iter0_top0_reg_320 = 'bx;

assign ap_phi_reg_pp0_iter0_yout_1_reg_379 = 'bx;

always @ (*) begin
    ap_predicate_op101_load_state4 = ((p_vld_reg_922 == 1'd1) & (grp_fu_403_p2 == 1'd1) & (icmp_ln106_reg_977 == 1'd0) & (icmp_ln103_reg_973 == 1'd0));
end

always @ (*) begin
    ap_predicate_op105_load_state4 = ((p_vld_reg_922 == 1'd1) & (icmp_ln110_fu_610_p2 == 1'd1) & (icmp_ln106_reg_977 == 1'd1) & (icmp_ln103_reg_973 == 1'd0));
end

always @ (*) begin
    ap_predicate_op109_load_state4 = ((p_vld_reg_922 == 1'd1) & (grp_fu_403_p2 == 1'd1) & (icmp_ln106_reg_977 == 1'd1) & (icmp_ln103_reg_973 == 1'd0));
end

always @ (*) begin
    ap_predicate_op113_load_state4 = ((p_vld_reg_922 == 1'd1) & (icmp_ln110_fu_610_p2 == 1'd1) & (icmp_ln103_reg_973 == 1'd1));
end

always @ (*) begin
    ap_predicate_op117_load_state4 = ((p_vld_reg_922 == 1'd1) & (grp_fu_403_p2 == 1'd1) & (icmp_ln103_reg_973 == 1'd1));
end

always @ (*) begin
    ap_predicate_op138_load_state5 = ((icmp_ln110_reg_1007 == 1'd1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd0) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op142_load_state5 = ((icmp_ln111_reg_1016 == 1'd1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd0) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op144_load_state5 = ((icmp_ln110_reg_1007 == 1'd1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op148_load_state5 = ((icmp_ln108_reg_1030 == 1'd1) & (icmp_ln106_reg_977_pp0_iter1_reg == 1'd1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd0) & (p_vld_reg_922_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op150_load_state5 = ((icmp_ln110_reg_1007 == 1'd1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd1) & (p_vld_reg_922_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op154_load_state5 = ((icmp_ln105_reg_1044 == 1'd1) & (icmp_ln103_reg_973_pp0_iter1_reg == 1'd1) & (p_vld_reg_922_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op169_call_state6 = ((1'd1 == and_ln122_reg_1053) & (p_vld_reg_922_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op181_store_state7 = ((icmp_ln128_reg_981_pp0_iter2_reg == 1'd0) & (icmp_ln103_reg_973_pp0_iter2_reg == 1'd0) & (p_vld_reg_922_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op184_store_state7 = ((icmp_ln128_reg_981_pp0_iter2_reg == 1'd1) & (icmp_ln103_reg_973_pp0_iter2_reg == 1'd0) & (p_vld_reg_922_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op187_store_state7 = ((icmp_ln103_reg_973_pp0_iter2_reg == 1'd1) & (p_vld_reg_922_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op97_load_state4 = ((p_vld_reg_922 == 1'd1) & (icmp_ln110_fu_610_p2 == 1'd1) & (icmp_ln106_reg_977 == 1'd0) & (icmp_ln103_reg_973 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b8_fu_473_p1 = input_r_TDATA_int_regslice[7:0];

assign empty_19_nbread_fu_164_p8_0 = input_r_TVALID_int_regslice;

assign g8_fu_559_p4 = {{in_data_reg_926[15:8]}};

assign grp_fu_403_p2 = (($signed(select_ln86_4_fu_551_p3) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_866_p0 = grp_fu_866_p00;

assign grp_fu_866_p00 = b8_fu_473_p1;

assign grp_fu_866_p1 = 13'd25;

assign grp_fu_866_p2 = grp_fu_866_p20;

assign grp_fu_866_p20 = add_ln10_2_fu_590_p2;

assign grp_sobel_core_fu_390_b2_val = ((in_user_reg_943_pp0_iter1_reg[0:0] == 1'b1) ? 8'd0 : gray_1_fu_160);

assign grp_sobel_core_fu_390_m2_val = ((in_user_reg_943_pp0_iter1_reg[0:0] == 1'b1) ? 8'd0 : mid0_1_fu_156);

assign grp_sobel_core_fu_390_t2_val = ((in_user_reg_943_pp0_iter1_reg[0:0] == 1'b1) ? 8'd0 : top0_4_fu_152);

assign icmp_ln103_fu_481_p2 = ((empty_fu_140 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_487_p2 = ((empty_fu_140 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln110_fu_610_p2 = (($signed(tmp_1_fu_600_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_656_p2 = (($signed(tmp_3_fu_646_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln128_fu_493_p2 = ((empty_fu_140 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln146_fu_509_p2 = ((add_ln146_fu_503_p2 < 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_768_p2 = (($signed(tmp_4_fu_758_p4) > $signed(21'd0)) ? 1'b1 : 1'b0);

assign in_last_fu_461_p1 = input_r_TLAST_int_regslice;

assign input_r_TREADY = regslice_both_input_r_V_data_V_U_ack_in;

assign output_r_TDATA_int_regslice = {{{ap_phi_mux_yout_1_phi_fu_383_p4}, {ap_phi_mux_yout_1_phi_fu_383_p4}}, {ap_phi_mux_yout_1_phi_fu_383_p4}};

assign output_r_TVALID = regslice_both_output_r_V_data_V_U_vld_out;

assign p_vld_fu_441_p1 = empty_19_nbread_fu_164_p8_0;

assign select_ln146_fu_525_p3 = ((icmp_ln146_fu_509_p2[0:0] == 1'b1) ? trunc_ln146_fu_521_p1 : xor_ln146_fu_515_p2);

assign select_ln149_fu_774_p3 = ((icmp_ln149_fu_768_p2[0:0] == 1'b1) ? 32'd2047 : add_ln148_fu_753_p2);

assign select_ln86_3_fu_544_p3 = ((in_user_reg_943[0:0] == 1'b1) ? 32'd0 : empty_18_fu_148);

assign select_ln86_4_fu_551_p3 = ((in_user_reg_943[0:0] == 1'b1) ? 32'd0 : inc480_fu_144);

assign shl_ln10_1_fu_700_p3 = {{tmp_reg_991}, {1'd0}};

assign shl_ln10_2_fu_711_p3 = {{tmp_2_reg_997}, {7'd0}};

assign shl_ln_fu_689_p3 = {{tmp_reg_991}, {6'd0}};

assign tmp_1_fu_600_p4 = {{select_ln86_4_fu_551_p3[31:1]}};

assign tmp_3_fu_646_p4 = {{select_ln86_3_fu_544_p3[31:1]}};

assign tmp_4_fu_758_p4 = {{add_ln148_fu_753_p2[31:11]}};

assign trunc_ln146_fu_521_p1 = add_ln146_fu_503_p2[1:0];

assign xor_ln146_fu_515_p2 = (empty_fu_140 ^ 2'd2);

assign y_fu_737_p2 = (zext_ln10_6_fu_734_p1 + add_ln10_1_fu_728_p2);

assign zext_ln104_fu_636_p1 = select_ln86_3_fu_544_p3;

assign zext_ln105_fu_641_p1 = select_ln86_3_fu_544_p3;

assign zext_ln107_fu_626_p1 = select_ln86_3_fu_544_p3;

assign zext_ln108_fu_631_p1 = select_ln86_3_fu_544_p3;

assign zext_ln10_1_fu_707_p1 = shl_ln10_1_fu_700_p3;

assign zext_ln10_2_fu_577_p1 = g8_fu_559_p4;

assign zext_ln10_3_fu_718_p1 = shl_ln10_2_fu_711_p3;

assign zext_ln10_6_fu_734_p1 = grp_fu_866_p3;

assign zext_ln10_fu_696_p1 = shl_ln_fu_689_p3;

assign zext_ln110_fu_616_p1 = select_ln86_3_fu_544_p3;

assign zext_ln111_fu_621_p1 = select_ln86_3_fu_544_p3;

assign zext_ln127_fu_849_p1 = select_ln86_3_reg_985_pp0_iter2_reg;

assign zext_ln146_fu_499_p1 = empty_fu_140;

endmodule //sobel_filter
