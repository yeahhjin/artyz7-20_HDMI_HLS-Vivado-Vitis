// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sobel_filter_sobel_core (
        ap_clk,
        ap_rst,
        t2_val,
        t1_val,
        m2_val,
        m0_val,
        b2_val,
        b1_val,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] t2_val;
input  [7:0] t1_val;
input  [7:0] m2_val;
input  [7:0] m0_val;
input  [7:0] b2_val;
input  [7:0] b1_val;
output  [7:0] ap_return;
input   ap_ce;

reg[7:0] ap_return;

wire   [8:0] sub_ln27_fu_148_p2;
reg   [8:0] sub_ln27_reg_307;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [10:0] gx_fu_168_p2;
reg   [10:0] gx_reg_312;
wire   [9:0] sub_ln31_fu_190_p2;
reg   [9:0] sub_ln31_reg_318;
reg   [0:0] tmp_6_reg_323;
reg   [3:0] tmp_8_reg_328;
wire   [7:0] add_ln40_fu_289_p2;
reg   [7:0] add_ln40_reg_333;
wire    ap_block_pp0_stage0;
wire   [8:0] zext_ln26_fu_82_p1;
wire   [8:0] zext_ln22_fu_86_p1;
wire   [8:0] gx_l_fu_90_p2;
wire   [8:0] zext_ln23_fu_100_p1;
wire   [8:0] zext_ln23_1_fu_104_p1;
wire   [8:0] sub_ln23_fu_108_p2;
wire   [8:0] zext_ln26_2_fu_126_p1;
wire   [8:0] zext_ln24_1_fu_134_p1;
wire   [8:0] gx_r_fu_138_p2;
wire   [9:0] tmp_fu_114_p3;
wire  signed [9:0] sext_ln22_fu_96_p1;
wire  signed [9:0] sext_ln24_fu_144_p1;
wire   [9:0] add_ln30_fu_158_p2;
wire  signed [10:0] sext_ln30_1_fu_164_p1;
wire  signed [10:0] sext_ln30_fu_154_p1;
wire   [8:0] gy_r_fu_174_p2;
wire   [9:0] zext_ln26_3_fu_180_p1;
wire   [9:0] zext_ln24_fu_130_p1;
wire   [9:0] gy_l_fu_184_p2;
wire   [9:0] zext_ln26_1_fu_122_p1;
wire   [9:0] tmp_5_fu_204_p3;
wire  signed [10:0] sext_ln31_fu_215_p1;
wire  signed [10:0] sext_ln28_fu_211_p1;
wire   [10:0] ax_fu_224_p2;
wire   [10:0] gy_fu_218_p2;
wire   [0:0] tmp_7_fu_235_p3;
wire   [10:0] ay_fu_243_p2;
wire  signed [10:0] ax_1_fu_229_p3;
wire  signed [10:0] ay_1_fu_249_p3;
wire  signed [11:0] sext_ln38_1_fu_261_p1;
wire  signed [11:0] sext_ln38_fu_257_p1;
wire   [11:0] mag_fu_273_p2;
wire   [7:0] trunc_ln38_1_fu_269_p1;
wire   [7:0] trunc_ln38_fu_265_p1;
wire   [0:0] icmp_ln40_fu_295_p2;
wire   [7:0] select_ln40_fu_300_p3;
reg    ap_ce_reg;
reg   [7:0] t2_val_int_reg;
reg   [7:0] t1_val_int_reg;
reg   [7:0] m2_val_int_reg;
reg   [7:0] m0_val_int_reg;
reg   [7:0] b2_val_int_reg;
reg   [7:0] b1_val_int_reg;
reg   [7:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln40_reg_333 <= add_ln40_fu_289_p2;
        gx_reg_312 <= gx_fu_168_p2;
        sub_ln27_reg_307 <= sub_ln27_fu_148_p2;
        sub_ln31_reg_318 <= sub_ln31_fu_190_p2;
        tmp_6_reg_323 <= gx_fu_168_p2[32'd10];
        tmp_8_reg_328 <= {{mag_fu_273_p2[11:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln40_fu_300_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        b1_val_int_reg <= b1_val;
        b2_val_int_reg <= b2_val;
        m0_val_int_reg <= m0_val;
        m2_val_int_reg <= m2_val;
        t1_val_int_reg <= t1_val;
        t2_val_int_reg <= t2_val;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln40_fu_300_p3;
    end else begin
        ap_return = 'bx;
    end
end

assign add_ln30_fu_158_p2 = ($signed(sext_ln22_fu_96_p1) + $signed(sext_ln24_fu_144_p1));

assign add_ln40_fu_289_p2 = (trunc_ln38_1_fu_269_p1 + trunc_ln38_fu_265_p1);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ax_1_fu_229_p3 = ((tmp_6_reg_323[0:0] == 1'b1) ? ax_fu_224_p2 : gx_reg_312);

assign ax_fu_224_p2 = (11'd0 - gx_reg_312);

assign ay_1_fu_249_p3 = ((tmp_7_fu_235_p3[0:0] == 1'b1) ? ay_fu_243_p2 : gy_fu_218_p2);

assign ay_fu_243_p2 = (11'd0 - gy_fu_218_p2);

assign gx_fu_168_p2 = ($signed(sext_ln30_1_fu_164_p1) + $signed(sext_ln30_fu_154_p1));

assign gx_l_fu_90_p2 = (zext_ln26_fu_82_p1 - zext_ln22_fu_86_p1);

assign gx_r_fu_138_p2 = (zext_ln26_2_fu_126_p1 - zext_ln24_1_fu_134_p1);

assign gy_fu_218_p2 = ($signed(sext_ln31_fu_215_p1) + $signed(sext_ln28_fu_211_p1));

assign gy_l_fu_184_p2 = (zext_ln26_3_fu_180_p1 - zext_ln24_fu_130_p1);

assign gy_r_fu_174_p2 = (zext_ln26_fu_82_p1 + zext_ln22_fu_86_p1);

assign icmp_ln40_fu_295_p2 = (($signed(tmp_8_reg_328) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign mag_fu_273_p2 = ($signed(sext_ln38_1_fu_261_p1) + $signed(sext_ln38_fu_257_p1));

assign select_ln40_fu_300_p3 = ((icmp_ln40_fu_295_p2[0:0] == 1'b1) ? 8'd255 : add_ln40_reg_333);

assign sext_ln22_fu_96_p1 = $signed(gx_l_fu_90_p2);

assign sext_ln24_fu_144_p1 = $signed(gx_r_fu_138_p2);

assign sext_ln28_fu_211_p1 = $signed(tmp_5_fu_204_p3);

assign sext_ln30_1_fu_164_p1 = $signed(add_ln30_fu_158_p2);

assign sext_ln30_fu_154_p1 = $signed(tmp_fu_114_p3);

assign sext_ln31_fu_215_p1 = $signed(sub_ln31_reg_318);

assign sext_ln38_1_fu_261_p1 = ay_1_fu_249_p3;

assign sext_ln38_fu_257_p1 = ax_1_fu_229_p3;

assign sub_ln23_fu_108_p2 = (zext_ln23_fu_100_p1 - zext_ln23_1_fu_104_p1);

assign sub_ln27_fu_148_p2 = (zext_ln26_fu_82_p1 - zext_ln26_2_fu_126_p1);

assign sub_ln31_fu_190_p2 = (gy_l_fu_184_p2 - zext_ln26_1_fu_122_p1);

assign tmp_5_fu_204_p3 = {{sub_ln27_reg_307}, {1'd0}};

assign tmp_7_fu_235_p3 = gy_fu_218_p2[32'd10];

assign tmp_fu_114_p3 = {{sub_ln23_fu_108_p2}, {1'd0}};

assign trunc_ln38_1_fu_269_p1 = ay_1_fu_249_p3[7:0];

assign trunc_ln38_fu_265_p1 = ax_1_fu_229_p3[7:0];

assign zext_ln22_fu_86_p1 = t2_val_int_reg;

assign zext_ln23_1_fu_104_p1 = m2_val_int_reg;

assign zext_ln23_fu_100_p1 = m0_val_int_reg;

assign zext_ln24_1_fu_134_p1 = b2_val_int_reg;

assign zext_ln24_fu_130_p1 = b2_val_int_reg;

assign zext_ln26_1_fu_122_p1 = b1_val_int_reg;

assign zext_ln26_2_fu_126_p1 = b1_val_int_reg;

assign zext_ln26_3_fu_180_p1 = gy_r_fu_174_p2;

assign zext_ln26_fu_82_p1 = t1_val_int_reg;

endmodule //sobel_filter_sobel_core
