-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    input_r_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    input_r_TVALID : IN STD_LOGIC;
    input_r_TREADY : OUT STD_LOGIC;
    input_r_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    input_r_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    input_r_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    output_r_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    output_r_TVALID : OUT STD_LOGIC;
    output_r_TREADY : IN STD_LOGIC;
    output_r_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_r_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    output_r_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    output_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    output_r_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    output_r_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of sobel_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sobel_filter_sobel_filter,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.063438,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=1113,HLS_SYN_LUT=1409,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_7FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011111111111";
    constant ap_const_lv13_19 : STD_LOGIC_VECTOR (12 downto 0) := "0000000011001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal line1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line1_ce0 : STD_LOGIC;
    signal line1_we0 : STD_LOGIC;
    signal line1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line2_ce0 : STD_LOGIC;
    signal line2_we0 : STD_LOGIC;
    signal line2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line0_ce0 : STD_LOGIC;
    signal line0_we0 : STD_LOGIC;
    signal line0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal p_vld_reg_922 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_vld_reg_922_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_vld_fu_441_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_vld_reg_922_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_vld_reg_922_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_data_reg_926 : STD_LOGIC_VECTOR (23 downto 0);
    signal in_keep_reg_933 : STD_LOGIC_VECTOR (2 downto 0);
    signal in_keep_reg_933_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal in_keep_reg_933_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal in_keep_reg_933_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal in_strb_reg_938 : STD_LOGIC_VECTOR (2 downto 0);
    signal in_strb_reg_938_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal in_strb_reg_938_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal in_strb_reg_938_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal in_user_reg_943 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_user_reg_943_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_user_reg_943_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_user_reg_943_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_last_fu_461_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_last_reg_953 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_last_reg_953_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_last_reg_953_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_last_reg_953_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_id_reg_958 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_id_reg_958_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_id_reg_958_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_id_reg_958_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_dest_reg_963 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_dest_reg_963_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_dest_reg_963_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_dest_reg_963_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_973_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_973_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln106_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln106_reg_977 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln106_reg_977_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln128_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln128_reg_981 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln128_reg_981_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln128_reg_981_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_3_fu_544_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_3_reg_985 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_3_reg_985_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_991 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_reg_997 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln110_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1007 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_1016 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal icmp_ln108_reg_1030 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln105_reg_1044 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln122_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln122_reg_1053 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln122_reg_1053_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln122_reg_1053_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gray_reg_1057 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_sobel_core_fu_390_t2_val : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_core_fu_390_m2_val : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_core_fu_390_b2_val : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_core_fu_390_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_core_fu_390_ap_ce : STD_LOGIC;
    signal ap_predicate_op169_call_state6 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter4_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp169 : BOOLEAN;
    signal ap_block_state3_pp0_stage1_iter0_ignore_call0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1_ignore_call0 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter2_ignore_call0 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter3_ignore_call0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp178 : BOOLEAN;
    signal ap_phi_mux_top0_3_phi_fu_298_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_top0_3_reg_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_top0_3_reg_294 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_top0_2_phi_fu_311_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_top0_2_reg_307 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_top0_2_reg_307 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_top0_phi_fu_324_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_top0_reg_320 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_top0_reg_320 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_top0_1_reg_333 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_top0_1_reg_333 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_top0_1_reg_333 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_mid0_reg_357 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_mid0_reg_357 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_mid0_reg_357 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_yout_1_phi_fu_383_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_yout_1_reg_379 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_yout_1_reg_379 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_yout_1_reg_379 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_yout_1_reg_379 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln110_fu_616_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln107_fu_626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln108_fu_631_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln104_fu_636_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln105_fu_641_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_fu_849_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_140 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln146_fu_525_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal inc480_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_4_fu_551_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln145_fu_673_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_18_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln149_fu_774_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal top0_4_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal mid0_1_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal gray_1_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_19_nbread_fu_164_p8_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal b8_fu_473_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln146_fu_499_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln146_fu_503_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln146_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln146_fu_521_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln146_fu_515_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal g8_fu_559_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln10_2_fu_577_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln10_2_fu_590_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_600_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_3_fu_646_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln122_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_689_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln10_1_fu_700_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln10_2_fu_711_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln10_1_fu_707_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln10_3_fu_718_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln10_fu_722_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln10_fu_696_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_866_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln10_6_fu_734_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln10_1_fu_728_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_fu_737_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln148_fu_753_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_758_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln149_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_866_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_866_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_866_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_866_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op97_load_state4 : BOOLEAN;
    signal ap_enable_operation_97 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op138_load_state5 : BOOLEAN;
    signal ap_enable_operation_138 : BOOLEAN;
    signal ap_enable_state5_pp0_iter1_stage1 : BOOLEAN;
    signal ap_predicate_op187_store_state7 : BOOLEAN;
    signal ap_enable_operation_187 : BOOLEAN;
    signal ap_enable_state7_pp0_iter2_stage1 : BOOLEAN;
    signal ap_predicate_op101_load_state4 : BOOLEAN;
    signal ap_enable_operation_101 : BOOLEAN;
    signal ap_predicate_op142_load_state5 : BOOLEAN;
    signal ap_enable_operation_142 : BOOLEAN;
    signal ap_predicate_op184_store_state7 : BOOLEAN;
    signal ap_enable_operation_184 : BOOLEAN;
    signal ap_predicate_op105_load_state4 : BOOLEAN;
    signal ap_enable_operation_105 : BOOLEAN;
    signal ap_predicate_op144_load_state5 : BOOLEAN;
    signal ap_enable_operation_144 : BOOLEAN;
    signal ap_predicate_op181_store_state7 : BOOLEAN;
    signal ap_enable_operation_181 : BOOLEAN;
    signal ap_predicate_op109_load_state4 : BOOLEAN;
    signal ap_enable_operation_109 : BOOLEAN;
    signal ap_predicate_op148_load_state5 : BOOLEAN;
    signal ap_enable_operation_148 : BOOLEAN;
    signal ap_predicate_op113_load_state4 : BOOLEAN;
    signal ap_enable_operation_113 : BOOLEAN;
    signal ap_predicate_op150_load_state5 : BOOLEAN;
    signal ap_enable_operation_150 : BOOLEAN;
    signal ap_predicate_op117_load_state4 : BOOLEAN;
    signal ap_enable_operation_117 : BOOLEAN;
    signal ap_predicate_op154_load_state5 : BOOLEAN;
    signal ap_enable_operation_154 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_input_r_V_data_V_U_apdone_blk : STD_LOGIC;
    signal input_r_TDATA_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal input_r_TVALID_int_regslice : STD_LOGIC;
    signal input_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_input_r_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_r_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal input_r_TKEEP_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_input_r_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_r_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_r_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal input_r_TSTRB_int_regslice : STD_LOGIC_VECTOR (2 downto 0);
    signal regslice_both_input_r_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_r_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_r_V_user_V_U_apdone_blk : STD_LOGIC;
    signal input_r_TUSER_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_input_r_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_r_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_r_V_last_V_U_apdone_blk : STD_LOGIC;
    signal input_r_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_input_r_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_r_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_r_V_id_V_U_apdone_blk : STD_LOGIC;
    signal input_r_TID_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_input_r_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_r_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_r_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal input_r_TDEST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_input_r_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_r_V_dest_V_U_ack_in : STD_LOGIC;
    signal regslice_both_output_r_V_data_V_U_apdone_blk : STD_LOGIC;
    signal output_r_TDATA_int_regslice : STD_LOGIC_VECTOR (23 downto 0);
    signal output_r_TVALID_int_regslice : STD_LOGIC;
    signal output_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_output_r_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_r_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_r_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_r_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_r_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_r_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_r_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_r_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_r_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_r_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_r_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_r_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_r_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_r_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_r_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_r_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_r_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_r_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_r_V_dest_V_U_vld_out : STD_LOGIC;
    signal grp_fu_866_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_866_p20 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component sobel_filter_sobel_core IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        t2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        t1_val : IN STD_LOGIC_VECTOR (7 downto 0);
        m2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        m0_val : IN STD_LOGIC_VECTOR (7 downto 0);
        b2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        b1_val : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component sobel_filter_mac_muladd_8ns_5ns_9ns_13_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component sobel_filter_line1_RAM_1P_BRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_filter_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    line1_U : component sobel_filter_line1_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line1_address0,
        ce0 => line1_ce0,
        we0 => line1_we0,
        d0 => gray_reg_1057,
        q0 => line1_q0);

    line2_U : component sobel_filter_line1_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line2_address0,
        ce0 => line2_ce0,
        we0 => line2_we0,
        d0 => gray_reg_1057,
        q0 => line2_q0);

    line0_U : component sobel_filter_line1_RAM_1P_BRAM_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line0_address0,
        ce0 => line0_ce0,
        we0 => line0_we0,
        d0 => gray_reg_1057,
        q0 => line0_q0);

    grp_sobel_core_fu_390 : component sobel_filter_sobel_core
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        t2_val => grp_sobel_core_fu_390_t2_val,
        t1_val => ap_phi_reg_pp0_iter2_top0_1_reg_333,
        m2_val => grp_sobel_core_fu_390_m2_val,
        m0_val => ap_phi_reg_pp0_iter2_mid0_reg_357,
        b2_val => grp_sobel_core_fu_390_b2_val,
        b1_val => gray_reg_1057,
        ap_return => grp_sobel_core_fu_390_ap_return,
        ap_ce => grp_sobel_core_fu_390_ap_ce);

    mac_muladd_8ns_5ns_9ns_13_4_1_U7 : component sobel_filter_mac_muladd_8ns_5ns_9ns_13_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        din2_WIDTH => 9,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_866_p0,
        din1 => grp_fu_866_p1,
        din2 => grp_fu_866_p2,
        ce => grp_fu_866_ce,
        dout => grp_fu_866_p3);

    regslice_both_input_r_V_data_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TDATA,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_V_data_V_U_ack_in,
        data_out => input_r_TDATA_int_regslice,
        vld_out => input_r_TVALID_int_regslice,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_V_data_V_U_apdone_blk);

    regslice_both_input_r_V_keep_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TKEEP,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_V_keep_V_U_ack_in,
        data_out => input_r_TKEEP_int_regslice,
        vld_out => regslice_both_input_r_V_keep_V_U_vld_out,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_V_keep_V_U_apdone_blk);

    regslice_both_input_r_V_strb_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TSTRB,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_V_strb_V_U_ack_in,
        data_out => input_r_TSTRB_int_regslice,
        vld_out => regslice_both_input_r_V_strb_V_U_vld_out,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_V_strb_V_U_apdone_blk);

    regslice_both_input_r_V_user_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TUSER,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_V_user_V_U_ack_in,
        data_out => input_r_TUSER_int_regslice,
        vld_out => regslice_both_input_r_V_user_V_U_vld_out,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_V_user_V_U_apdone_blk);

    regslice_both_input_r_V_last_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TLAST,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_V_last_V_U_ack_in,
        data_out => input_r_TLAST_int_regslice,
        vld_out => regslice_both_input_r_V_last_V_U_vld_out,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_V_last_V_U_apdone_blk);

    regslice_both_input_r_V_id_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TID,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_V_id_V_U_ack_in,
        data_out => input_r_TID_int_regslice,
        vld_out => regslice_both_input_r_V_id_V_U_vld_out,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_V_id_V_U_apdone_blk);

    regslice_both_input_r_V_dest_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TDEST,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_V_dest_V_U_ack_in,
        data_out => input_r_TDEST_int_regslice,
        vld_out => regslice_both_input_r_V_dest_V_U_vld_out,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_V_dest_V_U_apdone_blk);

    regslice_both_output_r_V_data_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 24)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_r_TDATA_int_regslice,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => output_r_TREADY_int_regslice,
        data_out => output_r_TDATA,
        vld_out => regslice_both_output_r_V_data_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_V_data_V_U_apdone_blk);

    regslice_both_output_r_V_keep_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_keep_reg_933_pp0_iter3_reg,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_r_V_keep_V_U_ack_in_dummy,
        data_out => output_r_TKEEP,
        vld_out => regslice_both_output_r_V_keep_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_V_keep_V_U_apdone_blk);

    regslice_both_output_r_V_strb_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 3)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_strb_reg_938_pp0_iter3_reg,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_r_V_strb_V_U_ack_in_dummy,
        data_out => output_r_TSTRB,
        vld_out => regslice_both_output_r_V_strb_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_V_strb_V_U_apdone_blk);

    regslice_both_output_r_V_user_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_user_reg_943_pp0_iter3_reg,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_r_V_user_V_U_ack_in_dummy,
        data_out => output_r_TUSER,
        vld_out => regslice_both_output_r_V_user_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_V_user_V_U_apdone_blk);

    regslice_both_output_r_V_last_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_last_reg_953_pp0_iter3_reg,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_r_V_last_V_U_ack_in_dummy,
        data_out => output_r_TLAST,
        vld_out => regslice_both_output_r_V_last_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_V_last_V_U_apdone_blk);

    regslice_both_output_r_V_id_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_id_reg_958_pp0_iter3_reg,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_r_V_id_V_U_ack_in_dummy,
        data_out => output_r_TID,
        vld_out => regslice_both_output_r_V_id_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_V_id_V_U_apdone_blk);

    regslice_both_output_r_V_dest_V_U : component sobel_filter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_dest_reg_963_pp0_iter3_reg,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_r_V_dest_V_U_ack_in_dummy,
        data_out => output_r_TDEST,
        vld_out => regslice_both_output_r_V_dest_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_top0_2_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_fu_610_p2 = ap_const_lv1_0) and (icmp_ln106_reg_977 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter1_top0_2_reg_307 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_phi_reg_pp0_iter1_top0_2_reg_307 <= ap_phi_reg_pp0_iter0_top0_2_reg_307;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_top0_3_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_fu_610_p2 = ap_const_lv1_0) and (icmp_ln106_reg_977 = ap_const_lv1_0) and (icmp_ln103_reg_973 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter1_top0_3_reg_294 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_phi_reg_pp0_iter1_top0_3_reg_294 <= ap_phi_reg_pp0_iter0_top0_3_reg_294;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_top0_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_fu_610_p2 = ap_const_lv1_0) and (icmp_ln103_reg_973 = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter1_top0_reg_320 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_phi_reg_pp0_iter1_top0_reg_320 <= ap_phi_reg_pp0_iter0_top0_reg_320;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_yout_1_reg_379_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = and_ln122_fu_662_p2))) then 
                ap_phi_reg_pp0_iter1_yout_1_reg_379 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_phi_reg_pp0_iter1_yout_1_reg_379 <= ap_phi_reg_pp0_iter0_yout_1_reg_379;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_mid0_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln108_reg_1030 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln105_reg_1044 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln111_reg_1016 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)))) then 
                ap_phi_reg_pp0_iter2_mid0_reg_357 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln105_reg_1044 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter2_mid0_reg_357 <= line2_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln108_reg_1030 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter2_mid0_reg_357 <= line0_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln111_reg_1016 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter2_mid0_reg_357 <= line1_q0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_phi_reg_pp0_iter2_mid0_reg_357 <= ap_phi_reg_pp0_iter1_mid0_reg_357;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_top0_1_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln105_reg_1044 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln105_reg_1044 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)))) then 
                ap_phi_reg_pp0_iter2_top0_1_reg_333 <= ap_phi_mux_top0_phi_fu_324_p4;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln108_reg_1030 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln108_reg_1030 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)))) then 
                ap_phi_reg_pp0_iter2_top0_1_reg_333 <= ap_phi_mux_top0_2_phi_fu_311_p4;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln111_reg_1016 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln111_reg_1016 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)))) then 
                ap_phi_reg_pp0_iter2_top0_1_reg_333 <= ap_phi_mux_top0_3_phi_fu_298_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_phi_reg_pp0_iter2_top0_1_reg_333 <= ap_phi_reg_pp0_iter1_top0_1_reg_333;
            end if; 
        end if;
    end process;

    empty_18_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) or ((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (in_last_reg_953 = ap_const_lv1_1)))) then 
                empty_18_fu_148 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (in_last_reg_953_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1))) then 
                empty_18_fu_148 <= select_ln149_fu_774_p3;
            end if; 
        end if;
    end process;

    empty_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                empty_fu_140 <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (in_last_fu_461_p1 = ap_const_lv1_1) and (p_vld_fu_441_p1 = ap_const_lv1_1))) then 
                empty_fu_140 <= select_ln146_fu_525_p3;
            end if; 
        end if;
    end process;

    gray_1_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (in_last_reg_953_pp0_iter1_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)))) then 
                gray_1_fu_160 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (in_last_reg_953_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1))) then 
                gray_1_fu_160 <= gray_reg_1057;
            end if; 
        end if;
    end process;

    inc480_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                inc480_fu_144 <= ap_const_lv32_0;
            elsif (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (in_last_reg_953 = ap_const_lv1_1))) then 
                inc480_fu_144 <= add_ln145_fu_673_p2;
            elsif (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (in_last_reg_953 = ap_const_lv1_0))) then 
                inc480_fu_144 <= select_ln86_4_fu_551_p3;
            end if; 
        end if;
    end process;

    mid0_1_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (in_last_reg_953_pp0_iter1_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)))) then 
                mid0_1_fu_156 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (in_last_reg_953_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1))) then 
                mid0_1_fu_156 <= ap_phi_reg_pp0_iter2_mid0_reg_357;
            end if; 
        end if;
    end process;

    top0_4_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (in_last_reg_953_pp0_iter1_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1)))) then 
                top0_4_fu_152 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (in_last_reg_953_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1))) then 
                top0_4_fu_152 <= ap_phi_reg_pp0_iter2_top0_1_reg_333;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln122_reg_1053 <= and_ln122_fu_662_p2;
                icmp_ln110_reg_1007 <= icmp_ln110_fu_610_p2;
                select_ln86_3_reg_985 <= select_ln86_3_fu_544_p3;
                tmp_2_reg_997 <= in_data_reg_926(15 downto 8);
                tmp_reg_991 <= in_data_reg_926(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln122_reg_1053_pp0_iter2_reg <= and_ln122_reg_1053;
                and_ln122_reg_1053_pp0_iter3_reg <= and_ln122_reg_1053_pp0_iter2_reg;
                icmp_ln103_reg_973_pp0_iter1_reg <= icmp_ln103_reg_973;
                icmp_ln103_reg_973_pp0_iter2_reg <= icmp_ln103_reg_973_pp0_iter1_reg;
                icmp_ln106_reg_977_pp0_iter1_reg <= icmp_ln106_reg_977;
                icmp_ln128_reg_981_pp0_iter1_reg <= icmp_ln128_reg_981;
                icmp_ln128_reg_981_pp0_iter2_reg <= icmp_ln128_reg_981_pp0_iter1_reg;
                in_data_reg_926 <= input_r_TDATA_int_regslice;
                in_dest_reg_963 <= input_r_TDEST_int_regslice;
                in_dest_reg_963_pp0_iter1_reg <= in_dest_reg_963;
                in_dest_reg_963_pp0_iter2_reg <= in_dest_reg_963_pp0_iter1_reg;
                in_dest_reg_963_pp0_iter3_reg <= in_dest_reg_963_pp0_iter2_reg;
                in_id_reg_958 <= input_r_TID_int_regslice;
                in_id_reg_958_pp0_iter1_reg <= in_id_reg_958;
                in_id_reg_958_pp0_iter2_reg <= in_id_reg_958_pp0_iter1_reg;
                in_id_reg_958_pp0_iter3_reg <= in_id_reg_958_pp0_iter2_reg;
                in_keep_reg_933 <= input_r_TKEEP_int_regslice;
                in_keep_reg_933_pp0_iter1_reg <= in_keep_reg_933;
                in_keep_reg_933_pp0_iter2_reg <= in_keep_reg_933_pp0_iter1_reg;
                in_keep_reg_933_pp0_iter3_reg <= in_keep_reg_933_pp0_iter2_reg;
                in_last_reg_953 <= input_r_TLAST_int_regslice;
                in_last_reg_953_pp0_iter1_reg <= in_last_reg_953;
                in_last_reg_953_pp0_iter2_reg <= in_last_reg_953_pp0_iter1_reg;
                in_last_reg_953_pp0_iter3_reg <= in_last_reg_953_pp0_iter2_reg;
                in_strb_reg_938 <= input_r_TSTRB_int_regslice;
                in_strb_reg_938_pp0_iter1_reg <= in_strb_reg_938;
                in_strb_reg_938_pp0_iter2_reg <= in_strb_reg_938_pp0_iter1_reg;
                in_strb_reg_938_pp0_iter3_reg <= in_strb_reg_938_pp0_iter2_reg;
                in_user_reg_943 <= input_r_TUSER_int_regslice;
                in_user_reg_943_pp0_iter1_reg <= in_user_reg_943;
                in_user_reg_943_pp0_iter2_reg <= in_user_reg_943_pp0_iter1_reg;
                in_user_reg_943_pp0_iter3_reg <= in_user_reg_943_pp0_iter2_reg;
                p_vld_reg_922 <= empty_19_nbread_fu_164_p8_0;
                p_vld_reg_922_pp0_iter1_reg <= p_vld_reg_922;
                p_vld_reg_922_pp0_iter2_reg <= p_vld_reg_922_pp0_iter1_reg;
                p_vld_reg_922_pp0_iter3_reg <= p_vld_reg_922_pp0_iter2_reg;
                select_ln86_3_reg_985_pp0_iter2_reg <= select_ln86_3_reg_985;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_phi_reg_pp0_iter1_mid0_reg_357 <= ap_phi_reg_pp0_iter0_mid0_reg_357;
                ap_phi_reg_pp0_iter1_top0_1_reg_333 <= ap_phi_reg_pp0_iter0_top0_1_reg_333;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_phi_reg_pp0_iter2_yout_1_reg_379 <= ap_phi_reg_pp0_iter1_yout_1_reg_379;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_phi_reg_pp0_iter3_yout_1_reg_379 <= ap_phi_reg_pp0_iter2_yout_1_reg_379;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1))) then
                gray_reg_1057 <= y_fu_737_p2(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (p_vld_fu_441_p1 = ap_const_lv1_1))) then
                icmp_ln103_reg_973 <= icmp_ln103_fu_481_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_973 = ap_const_lv1_1))) then
                icmp_ln105_reg_1044 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_fu_481_p2 = ap_const_lv1_0) and (p_vld_fu_441_p1 = ap_const_lv1_1))) then
                icmp_ln106_reg_977 <= icmp_ln106_fu_487_p2;
                icmp_ln128_reg_981 <= icmp_ln128_fu_493_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln106_reg_977 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_0))) then
                icmp_ln108_reg_1030 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln106_reg_977 = ap_const_lv1_0) and (icmp_ln103_reg_973 = ap_const_lv1_0))) then
                icmp_ln111_reg_1016 <= grp_fu_403_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln10_1_fu_728_p2 <= std_logic_vector(unsigned(add_ln10_fu_722_p2) + unsigned(zext_ln10_fu_696_p1));
    add_ln10_2_fu_590_p2 <= std_logic_vector(unsigned(zext_ln10_2_fu_577_p1) + unsigned(ap_const_lv9_80));
    add_ln10_fu_722_p2 <= std_logic_vector(unsigned(zext_ln10_1_fu_707_p1) + unsigned(zext_ln10_3_fu_718_p1));
    add_ln145_fu_673_p2 <= std_logic_vector(unsigned(select_ln86_4_fu_551_p3) + unsigned(ap_const_lv32_1));
    add_ln146_fu_503_p2 <= std_logic_vector(unsigned(zext_ln146_fu_499_p1) + unsigned(ap_const_lv3_1));
    add_ln148_fu_753_p2 <= std_logic_vector(unsigned(select_ln86_3_reg_985) + unsigned(ap_const_lv32_1));
    and_ln122_fu_662_p2 <= (icmp_ln122_fu_656_p2 and icmp_ln110_fu_610_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_ST_fsm_state1_blk <= ap_const_logic_0;

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= (((ap_const_boolean_1 = ap_block_pp0_stage0_subdone) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm)) or ((ap_ST_fsm_pp0_stage1 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage1_subdone)));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_vld_reg_922_pp0_iter3_reg, ap_enable_reg_pp0_iter4, ap_block_state10_io, output_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp169_assign_proc : process(p_vld_reg_922_pp0_iter3_reg, ap_enable_reg_pp0_iter4, ap_block_state10_io, output_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp169 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_vld_reg_922_pp0_iter3_reg, ap_enable_reg_pp0_iter4, ap_block_state10_io, output_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter3, p_vld_reg_922_pp0_iter3_reg, output_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_01001 <= ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter3, p_vld_reg_922_pp0_iter3_reg, ap_block_state9_io, output_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp178_assign_proc : process(ap_enable_reg_pp0_iter3, p_vld_reg_922_pp0_iter3_reg, ap_block_state9_io, output_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp178 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, p_vld_reg_922_pp0_iter3_reg, ap_block_state9_io, output_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1))));
    end process;


    ap_block_state10_io_assign_proc : process(p_vld_reg_922_pp0_iter3_reg, output_r_TREADY_int_regslice)
    begin
                ap_block_state10_io <= ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1));
    end process;


    ap_block_state10_pp0_stage0_iter4_assign_proc : process(p_vld_reg_922_pp0_iter3_reg, output_r_TREADY_int_regslice)
    begin
                ap_block_state10_pp0_stage0_iter4 <= ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1));
    end process;


    ap_block_state10_pp0_stage0_iter4_ignore_call0_assign_proc : process(p_vld_reg_922_pp0_iter3_reg, output_r_TREADY_int_regslice)
    begin
                ap_block_state10_pp0_stage0_iter4_ignore_call0 <= ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter2_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3_ignore_call0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_io_assign_proc : process(p_vld_reg_922_pp0_iter3_reg, output_r_TREADY_int_regslice)
    begin
                ap_block_state9_io <= ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1));
    end process;


    ap_block_state9_pp0_stage1_iter3_assign_proc : process(p_vld_reg_922_pp0_iter3_reg, output_r_TREADY_int_regslice)
    begin
                ap_block_state9_pp0_stage1_iter3 <= ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1));
    end process;


    ap_block_state9_pp0_stage1_iter3_ignore_call0_assign_proc : process(p_vld_reg_922_pp0_iter3_reg, output_r_TREADY_int_regslice)
    begin
                ap_block_state9_pp0_stage1_iter3_ignore_call0 <= ((output_r_TREADY_int_regslice = ap_const_logic_0) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1));
    end process;


    ap_enable_operation_101_assign_proc : process(ap_predicate_op101_load_state4)
    begin
                ap_enable_operation_101 <= (ap_predicate_op101_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_105_assign_proc : process(ap_predicate_op105_load_state4)
    begin
                ap_enable_operation_105 <= (ap_predicate_op105_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_109_assign_proc : process(ap_predicate_op109_load_state4)
    begin
                ap_enable_operation_109 <= (ap_predicate_op109_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_113_assign_proc : process(ap_predicate_op113_load_state4)
    begin
                ap_enable_operation_113 <= (ap_predicate_op113_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_117_assign_proc : process(ap_predicate_op117_load_state4)
    begin
                ap_enable_operation_117 <= (ap_predicate_op117_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_138_assign_proc : process(ap_predicate_op138_load_state5)
    begin
                ap_enable_operation_138 <= (ap_predicate_op138_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_142_assign_proc : process(ap_predicate_op142_load_state5)
    begin
                ap_enable_operation_142 <= (ap_predicate_op142_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_144_assign_proc : process(ap_predicate_op144_load_state5)
    begin
                ap_enable_operation_144 <= (ap_predicate_op144_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_148_assign_proc : process(ap_predicate_op148_load_state5)
    begin
                ap_enable_operation_148 <= (ap_predicate_op148_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_150_assign_proc : process(ap_predicate_op150_load_state5)
    begin
                ap_enable_operation_150 <= (ap_predicate_op150_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_154_assign_proc : process(ap_predicate_op154_load_state5)
    begin
                ap_enable_operation_154 <= (ap_predicate_op154_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_181_assign_proc : process(ap_predicate_op181_store_state7)
    begin
                ap_enable_operation_181 <= (ap_predicate_op181_store_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_184_assign_proc : process(ap_predicate_op184_store_state7)
    begin
                ap_enable_operation_184 <= (ap_predicate_op184_store_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_187_assign_proc : process(ap_predicate_op187_store_state7)
    begin
                ap_enable_operation_187 <= (ap_predicate_op187_store_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_97_assign_proc : process(ap_predicate_op97_load_state4)
    begin
                ap_enable_operation_97 <= (ap_predicate_op97_load_state4 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter1_stage1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state5_pp0_iter1_stage1 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_enable_state7_pp0_iter2_stage1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state7_pp0_iter2_stage1 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_top0_2_phi_fu_311_p4_assign_proc : process(line2_q0, p_vld_reg_922_pp0_iter1_reg, icmp_ln103_reg_973_pp0_iter1_reg, icmp_ln106_reg_977_pp0_iter1_reg, icmp_ln110_reg_1007, ap_phi_reg_pp0_iter1_top0_2_reg_307)
    begin
        if (((icmp_ln110_reg_1007 = ap_const_lv1_1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_top0_2_phi_fu_311_p4 <= line2_q0;
        else 
            ap_phi_mux_top0_2_phi_fu_311_p4 <= ap_phi_reg_pp0_iter1_top0_2_reg_307;
        end if; 
    end process;


    ap_phi_mux_top0_3_phi_fu_298_p4_assign_proc : process(line0_q0, p_vld_reg_922_pp0_iter1_reg, icmp_ln103_reg_973_pp0_iter1_reg, icmp_ln106_reg_977_pp0_iter1_reg, icmp_ln110_reg_1007, ap_phi_reg_pp0_iter1_top0_3_reg_294)
    begin
        if (((icmp_ln110_reg_1007 = ap_const_lv1_1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_top0_3_phi_fu_298_p4 <= line0_q0;
        else 
            ap_phi_mux_top0_3_phi_fu_298_p4 <= ap_phi_reg_pp0_iter1_top0_3_reg_294;
        end if; 
    end process;


    ap_phi_mux_top0_phi_fu_324_p4_assign_proc : process(line1_q0, p_vld_reg_922_pp0_iter1_reg, icmp_ln103_reg_973_pp0_iter1_reg, icmp_ln110_reg_1007, ap_phi_reg_pp0_iter1_top0_reg_320)
    begin
        if (((icmp_ln110_reg_1007 = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_top0_phi_fu_324_p4 <= line1_q0;
        else 
            ap_phi_mux_top0_phi_fu_324_p4 <= ap_phi_reg_pp0_iter1_top0_reg_320;
        end if; 
    end process;


    ap_phi_mux_yout_1_phi_fu_383_p4_assign_proc : process(p_vld_reg_922_pp0_iter3_reg, and_ln122_reg_1053_pp0_iter3_reg, grp_sobel_core_fu_390_ap_return, ap_phi_reg_pp0_iter3_yout_1_reg_379)
    begin
        if (((ap_const_lv1_1 = and_ln122_reg_1053_pp0_iter3_reg) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1))) then 
            ap_phi_mux_yout_1_phi_fu_383_p4 <= grp_sobel_core_fu_390_ap_return;
        else 
            ap_phi_mux_yout_1_phi_fu_383_p4 <= ap_phi_reg_pp0_iter3_yout_1_reg_379;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_mid0_reg_357 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_top0_1_reg_333 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_top0_2_reg_307 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_top0_3_reg_294 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_top0_reg_320 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_yout_1_reg_379 <= "XXXXXXXX";

    ap_predicate_op101_load_state4_assign_proc : process(p_vld_reg_922, icmp_ln103_reg_973, icmp_ln106_reg_977, grp_fu_403_p2)
    begin
                ap_predicate_op101_load_state4 <= ((p_vld_reg_922 = ap_const_lv1_1) and (grp_fu_403_p2 = ap_const_lv1_1) and (icmp_ln106_reg_977 = ap_const_lv1_0) and (icmp_ln103_reg_973 = ap_const_lv1_0));
    end process;


    ap_predicate_op105_load_state4_assign_proc : process(p_vld_reg_922, icmp_ln103_reg_973, icmp_ln106_reg_977, icmp_ln110_fu_610_p2)
    begin
                ap_predicate_op105_load_state4 <= ((p_vld_reg_922 = ap_const_lv1_1) and (icmp_ln110_fu_610_p2 = ap_const_lv1_1) and (icmp_ln106_reg_977 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_0));
    end process;


    ap_predicate_op109_load_state4_assign_proc : process(p_vld_reg_922, icmp_ln103_reg_973, icmp_ln106_reg_977, grp_fu_403_p2)
    begin
                ap_predicate_op109_load_state4 <= ((p_vld_reg_922 = ap_const_lv1_1) and (grp_fu_403_p2 = ap_const_lv1_1) and (icmp_ln106_reg_977 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_0));
    end process;


    ap_predicate_op113_load_state4_assign_proc : process(p_vld_reg_922, icmp_ln103_reg_973, icmp_ln110_fu_610_p2)
    begin
                ap_predicate_op113_load_state4 <= ((p_vld_reg_922 = ap_const_lv1_1) and (icmp_ln110_fu_610_p2 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_1));
    end process;


    ap_predicate_op117_load_state4_assign_proc : process(p_vld_reg_922, icmp_ln103_reg_973, grp_fu_403_p2)
    begin
                ap_predicate_op117_load_state4 <= ((p_vld_reg_922 = ap_const_lv1_1) and (grp_fu_403_p2 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_1));
    end process;


    ap_predicate_op138_load_state5_assign_proc : process(p_vld_reg_922_pp0_iter1_reg, icmp_ln103_reg_973_pp0_iter1_reg, icmp_ln106_reg_977_pp0_iter1_reg, icmp_ln110_reg_1007)
    begin
                ap_predicate_op138_load_state5 <= ((icmp_ln110_reg_1007 = ap_const_lv1_1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op142_load_state5_assign_proc : process(p_vld_reg_922_pp0_iter1_reg, icmp_ln103_reg_973_pp0_iter1_reg, icmp_ln106_reg_977_pp0_iter1_reg, icmp_ln111_reg_1016)
    begin
                ap_predicate_op142_load_state5 <= ((icmp_ln111_reg_1016 = ap_const_lv1_1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op144_load_state5_assign_proc : process(p_vld_reg_922_pp0_iter1_reg, icmp_ln103_reg_973_pp0_iter1_reg, icmp_ln106_reg_977_pp0_iter1_reg, icmp_ln110_reg_1007)
    begin
                ap_predicate_op144_load_state5 <= ((icmp_ln110_reg_1007 = ap_const_lv1_1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op148_load_state5_assign_proc : process(p_vld_reg_922_pp0_iter1_reg, icmp_ln103_reg_973_pp0_iter1_reg, icmp_ln106_reg_977_pp0_iter1_reg, icmp_ln108_reg_1030)
    begin
                ap_predicate_op148_load_state5 <= ((icmp_ln108_reg_1030 = ap_const_lv1_1) and (icmp_ln106_reg_977_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op150_load_state5_assign_proc : process(p_vld_reg_922_pp0_iter1_reg, icmp_ln103_reg_973_pp0_iter1_reg, icmp_ln110_reg_1007)
    begin
                ap_predicate_op150_load_state5 <= ((icmp_ln110_reg_1007 = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op154_load_state5_assign_proc : process(p_vld_reg_922_pp0_iter1_reg, icmp_ln103_reg_973_pp0_iter1_reg, icmp_ln105_reg_1044)
    begin
                ap_predicate_op154_load_state5 <= ((icmp_ln105_reg_1044 = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter1_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op169_call_state6_assign_proc : process(p_vld_reg_922_pp0_iter1_reg, and_ln122_reg_1053)
    begin
                ap_predicate_op169_call_state6 <= ((ap_const_lv1_1 = and_ln122_reg_1053) and (p_vld_reg_922_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op181_store_state7_assign_proc : process(p_vld_reg_922_pp0_iter2_reg, icmp_ln103_reg_973_pp0_iter2_reg, icmp_ln128_reg_981_pp0_iter2_reg)
    begin
                ap_predicate_op181_store_state7 <= ((icmp_ln128_reg_981_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln103_reg_973_pp0_iter2_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op184_store_state7_assign_proc : process(p_vld_reg_922_pp0_iter2_reg, icmp_ln103_reg_973_pp0_iter2_reg, icmp_ln128_reg_981_pp0_iter2_reg)
    begin
                ap_predicate_op184_store_state7 <= ((icmp_ln128_reg_981_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter2_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op187_store_state7_assign_proc : process(p_vld_reg_922_pp0_iter2_reg, icmp_ln103_reg_973_pp0_iter2_reg)
    begin
                ap_predicate_op187_store_state7 <= ((icmp_ln103_reg_973_pp0_iter2_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op97_load_state4_assign_proc : process(p_vld_reg_922, icmp_ln103_reg_973, icmp_ln106_reg_977, icmp_ln110_fu_610_p2)
    begin
                ap_predicate_op97_load_state4 <= ((p_vld_reg_922 = ap_const_lv1_1) and (icmp_ln110_fu_610_p2 = ap_const_lv1_1) and (icmp_ln106_reg_977 = ap_const_lv1_0) and (icmp_ln103_reg_973 = ap_const_lv1_0));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    b8_fu_473_p1 <= input_r_TDATA_int_regslice(8 - 1 downto 0);
    empty_19_nbread_fu_164_p8_0 <= (0=>(input_r_TVALID_int_regslice), others=>'-');
    g8_fu_559_p4 <= in_data_reg_926(15 downto 8);
    grp_fu_403_p2 <= "1" when (signed(select_ln86_4_fu_551_p3) > signed(ap_const_lv32_0)) else "0";

    grp_fu_866_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_866_ce <= ap_const_logic_1;
        else 
            grp_fu_866_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_866_p0 <= grp_fu_866_p00(8 - 1 downto 0);
    grp_fu_866_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b8_fu_473_p1),13));
    grp_fu_866_p1 <= ap_const_lv13_19(5 - 1 downto 0);
    grp_fu_866_p2 <= grp_fu_866_p20(9 - 1 downto 0);
    grp_fu_866_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln10_2_fu_590_p2),13));

    grp_sobel_core_fu_390_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp169, ap_block_pp0_stage1_11001_ignoreCallOp178)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp178) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp169) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_sobel_core_fu_390_ap_ce <= ap_const_logic_1;
        else 
            grp_sobel_core_fu_390_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sobel_core_fu_390_b2_val <= 
        ap_const_lv8_0 when (in_user_reg_943_pp0_iter1_reg(0) = '1') else 
        gray_1_fu_160;
    grp_sobel_core_fu_390_m2_val <= 
        ap_const_lv8_0 when (in_user_reg_943_pp0_iter1_reg(0) = '1') else 
        mid0_1_fu_156;
    grp_sobel_core_fu_390_t2_val <= 
        ap_const_lv8_0 when (in_user_reg_943_pp0_iter1_reg(0) = '1') else 
        top0_4_fu_152;
    icmp_ln103_fu_481_p2 <= "1" when (empty_fu_140 = ap_const_lv2_0) else "0";
    icmp_ln106_fu_487_p2 <= "1" when (empty_fu_140 = ap_const_lv2_1) else "0";
    icmp_ln110_fu_610_p2 <= "1" when (signed(tmp_1_fu_600_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln122_fu_656_p2 <= "1" when (signed(tmp_3_fu_646_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln128_fu_493_p2 <= "1" when (empty_fu_140 = ap_const_lv2_1) else "0";
    icmp_ln146_fu_509_p2 <= "1" when (unsigned(add_ln146_fu_503_p2) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln149_fu_768_p2 <= "1" when (signed(tmp_4_fu_758_p4) > signed(ap_const_lv21_0)) else "0";
    in_last_fu_461_p1 <= input_r_TLAST_int_regslice;
    input_r_TREADY <= regslice_both_input_r_V_data_V_U_ack_in;

    input_r_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, input_r_TVALID_int_regslice)
    begin
        if (((input_r_TVALID_int_regslice = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_r_TREADY_int_regslice <= ap_const_logic_1;
        else 
            input_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    line0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, p_vld_reg_922, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln103_reg_973, icmp_ln106_reg_977, icmp_ln110_fu_610_p2, grp_fu_403_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, zext_ln110_fu_616_p1, zext_ln108_fu_631_p1, zext_ln127_fu_849_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            line0_address0 <= zext_ln127_fu_849_p1(11 - 1 downto 0);
        elsif (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (grp_fu_403_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln106_reg_977 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_0))) then 
            line0_address0 <= zext_ln108_fu_631_p1(11 - 1 downto 0);
        elsif (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_fu_610_p2 = ap_const_lv1_1) and (icmp_ln106_reg_977 = ap_const_lv1_0) and (icmp_ln103_reg_973 = ap_const_lv1_0))) then 
            line0_address0 <= zext_ln110_fu_616_p1(11 - 1 downto 0);
        else 
            line0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, p_vld_reg_922, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln103_reg_973, icmp_ln106_reg_977, icmp_ln110_fu_610_p2, grp_fu_403_p2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_fu_610_p2 = ap_const_lv1_1) and (icmp_ln106_reg_977 = ap_const_lv1_0) and (icmp_ln103_reg_973 = ap_const_lv1_0)) or ((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (grp_fu_403_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln106_reg_977 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_0)))) then 
            line0_ce0 <= ap_const_logic_1;
        else 
            line0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, p_vld_reg_922_pp0_iter2_reg, icmp_ln103_reg_973_pp0_iter2_reg, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln103_reg_973_pp0_iter2_reg = ap_const_lv1_1) and (p_vld_reg_922_pp0_iter2_reg = ap_const_lv1_1))) then 
            line0_we0 <= ap_const_logic_1;
        else 
            line0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line1_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, p_vld_reg_922, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln103_reg_973, icmp_ln106_reg_977, icmp_ln110_fu_610_p2, grp_fu_403_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, zext_ln111_fu_621_p1, zext_ln104_fu_636_p1, zext_ln127_fu_849_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            line1_address0 <= zext_ln127_fu_849_p1(11 - 1 downto 0);
        elsif (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_fu_610_p2 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_1))) then 
            line1_address0 <= zext_ln104_fu_636_p1(11 - 1 downto 0);
        elsif (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (grp_fu_403_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln106_reg_977 = ap_const_lv1_0) and (icmp_ln103_reg_973 = ap_const_lv1_0))) then 
            line1_address0 <= zext_ln111_fu_621_p1(11 - 1 downto 0);
        else 
            line1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, p_vld_reg_922, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln103_reg_973, icmp_ln106_reg_977, icmp_ln110_fu_610_p2, grp_fu_403_p2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_fu_610_p2 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_1)) or ((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (grp_fu_403_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln106_reg_977 = ap_const_lv1_0) and (icmp_ln103_reg_973 = ap_const_lv1_0)))) then 
            line1_ce0 <= ap_const_logic_1;
        else 
            line1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line1_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, p_vld_reg_922_pp0_iter2_reg, icmp_ln103_reg_973_pp0_iter2_reg, icmp_ln128_reg_981_pp0_iter2_reg, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln128_reg_981_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln103_reg_973_pp0_iter2_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter2_reg = ap_const_lv1_1))) then 
            line1_we0 <= ap_const_logic_1;
        else 
            line1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line2_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, p_vld_reg_922, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln103_reg_973, icmp_ln106_reg_977, icmp_ln110_fu_610_p2, grp_fu_403_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, zext_ln107_fu_626_p1, zext_ln105_fu_641_p1, zext_ln127_fu_849_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            line2_address0 <= zext_ln127_fu_849_p1(11 - 1 downto 0);
        elsif (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (grp_fu_403_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_973 = ap_const_lv1_1))) then 
            line2_address0 <= zext_ln105_fu_641_p1(11 - 1 downto 0);
        elsif (((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_fu_610_p2 = ap_const_lv1_1) and (icmp_ln106_reg_977 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_0))) then 
            line2_address0 <= zext_ln107_fu_626_p1(11 - 1 downto 0);
        else 
            line2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, p_vld_reg_922, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln103_reg_973, icmp_ln106_reg_977, icmp_ln110_fu_610_p2, grp_fu_403_p2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_fu_610_p2 = ap_const_lv1_1) and (icmp_ln106_reg_977 = ap_const_lv1_1) and (icmp_ln103_reg_973 = ap_const_lv1_0)) or ((p_vld_reg_922 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (grp_fu_403_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln103_reg_973 = ap_const_lv1_1)))) then 
            line2_ce0 <= ap_const_logic_1;
        else 
            line2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line2_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, p_vld_reg_922_pp0_iter2_reg, icmp_ln103_reg_973_pp0_iter2_reg, icmp_ln128_reg_981_pp0_iter2_reg, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln128_reg_981_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln103_reg_973_pp0_iter2_reg = ap_const_lv1_0) and (p_vld_reg_922_pp0_iter2_reg = ap_const_lv1_1))) then 
            line2_we0 <= ap_const_logic_1;
        else 
            line2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, ap_block_pp0_stage1, p_vld_reg_922_pp0_iter3_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, output_r_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            output_r_TDATA_blk_n <= output_r_TREADY_int_regslice;
        else 
            output_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_r_TDATA_int_regslice <= ((ap_phi_mux_yout_1_phi_fu_383_p4 & ap_phi_mux_yout_1_phi_fu_383_p4) & ap_phi_mux_yout_1_phi_fu_383_p4);
    output_r_TVALID <= regslice_both_output_r_V_data_V_U_vld_out;

    output_r_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter3, p_vld_reg_922_pp0_iter3_reg, ap_block_pp0_stage1_11001)
    begin
        if (((p_vld_reg_922_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            output_r_TVALID_int_regslice <= ap_const_logic_1;
        else 
            output_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    p_vld_fu_441_p1 <= empty_19_nbread_fu_164_p8_0;
    select_ln146_fu_525_p3 <= 
        trunc_ln146_fu_521_p1 when (icmp_ln146_fu_509_p2(0) = '1') else 
        xor_ln146_fu_515_p2;
    select_ln149_fu_774_p3 <= 
        ap_const_lv32_7FF when (icmp_ln149_fu_768_p2(0) = '1') else 
        add_ln148_fu_753_p2;
    select_ln86_3_fu_544_p3 <= 
        ap_const_lv32_0 when (in_user_reg_943(0) = '1') else 
        empty_18_fu_148;
    select_ln86_4_fu_551_p3 <= 
        ap_const_lv32_0 when (in_user_reg_943(0) = '1') else 
        inc480_fu_144;
    shl_ln10_1_fu_700_p3 <= (tmp_reg_991 & ap_const_lv1_0);
    shl_ln10_2_fu_711_p3 <= (tmp_2_reg_997 & ap_const_lv7_0);
    shl_ln_fu_689_p3 <= (tmp_reg_991 & ap_const_lv6_0);
    tmp_1_fu_600_p4 <= select_ln86_4_fu_551_p3(31 downto 1);
    tmp_3_fu_646_p4 <= select_ln86_3_fu_544_p3(31 downto 1);
    tmp_4_fu_758_p4 <= add_ln148_fu_753_p2(31 downto 11);
    trunc_ln146_fu_521_p1 <= add_ln146_fu_503_p2(2 - 1 downto 0);
    xor_ln146_fu_515_p2 <= (empty_fu_140 xor ap_const_lv2_2);
    y_fu_737_p2 <= std_logic_vector(unsigned(zext_ln10_6_fu_734_p1) + unsigned(add_ln10_1_fu_728_p2));
    zext_ln104_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_3_fu_544_p3),64));
    zext_ln105_fu_641_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_3_fu_544_p3),64));
    zext_ln107_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_3_fu_544_p3),64));
    zext_ln108_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_3_fu_544_p3),64));
    zext_ln10_1_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln10_1_fu_700_p3),16));
    zext_ln10_2_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(g8_fu_559_p4),9));
    zext_ln10_3_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln10_2_fu_711_p3),16));
    zext_ln10_6_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_866_p3),16));
    zext_ln10_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_689_p3),16));
    zext_ln110_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_3_fu_544_p3),64));
    zext_ln111_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_3_fu_544_p3),64));
    zext_ln127_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_3_reg_985_pp0_iter2_reg),64));
    zext_ln146_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_140),3));
end behav;
